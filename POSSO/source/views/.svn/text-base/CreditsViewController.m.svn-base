//
//  CreditsViewController.m
//  Posso
//
//  Created by alex on 15/04/09.
//  Copyright 2009 Trollwerks Inc. All rights reserved.
//

#import "CreditsViewController.h"

@implementation CreditsViewController

@synthesize creditsTable;
@synthesize applicationItems;
@synthesize peopleItems;

#pragma mark -
#pragma mark Fields in item description plists

NSString *kCreditCellText = @"text";
NSString *kCreditCellURL = @"url";
NSString *kCreditCellHeight = @"height";
NSString *kCreditCellImage = @"image";

#pragma mark -
#pragma mark Life cycle

- (void)viewDidLoad
{
   [super viewDidLoad];
   
   self.creditsTable.backgroundColor = [UIColor clearColor];
   
   self.applicationItems = [NSArray arrayWithContentsOfFile:[[NSBundle mainBundle] pathForResource:@"applicationItems" ofType:@"plist"]];
   self.peopleItems = [NSArray arrayWithContentsOfFile:[[NSBundle mainBundle] pathForResource:@"peopleItems" ofType:@"plist"]];
}

- (void)didReceiveMemoryWarning
{
   twlog("CreditsViewController didReceiveMemoryWarning -- no action");
   [super didReceiveMemoryWarning];
}

#if __IPHONE_OS_VERSION_MIN_REQUIRED >= 30000
- (void)viewDidUnload
{
	[self clearOutlets];
}

- (void)setView:(UIView*)toView
{
	if (!toView)
		[self clearOutlets];
	
	[super setView:toView];
}
#endif __IPHONE_OS_VERSION_MIN_REQUIRED >= 30000

- (void) clearOutlets
{
   self.creditsTable = nil;
}

- (void)dealloc
{
   [self clearOutlets];
   self.applicationItems = nil;
   self.peopleItems = nil;
   [super dealloc];
}

#pragma mark -
#pragma mark Table support

- (NSDictionary *)itemInfoAtIndexPath:(NSIndexPath *)indexPath
{
   NSDictionary *itemInfo = nil;
   switch (indexPath.section)
   {
      case kCreditsSection_Application:
         itemInfo = [self.applicationItems objectAtIndex:indexPath.row];
         break;
      case kCreditsSection_People:
         itemInfo = [self.peopleItems objectAtIndex:indexPath.row];
         break;
      default:
         twlog("what CreditsViewController section is %i?", indexPath.section);
         break;
   }

   return itemInfo;
}

- (UIImage *)creditsImageFor:(NSString *)person;
{
   UIImage *creditsImage = nil;
   
   NSArray *nameComponents = [person componentsSeparatedByCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];
   twlogif(2 != nameComponents.count, "name parsing for image isn't working for '%@'", person);
   NSString *imagePath = [NSString stringWithFormat:@"credits/%@_%@.png",
      [nameComponents objectAtIndex:0],
      [nameComponents lastObject]
   ];
   creditsImage = [UIImage imageNamed:imagePath];
   twlogif(!creditsImage, "FAIL: expected image at '%@'!", imagePath);

   return creditsImage;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
	(void)tableView;
   return kCreditsSectionCount;
}

- (NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section;
{
	(void)tableView;
	
   switch (section)
   {
      case kCreditsSection_Application:
         return @"About POssO";
      case kCreditsSection_People:
         return @"Credits";
      default:
         twlog("what CreditsViewController section is %i?", section);
         return @"";
   }
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
   (void)tableView;
   
   switch (section)
   {
      case kCreditsSection_Application:
         return self.applicationItems.count;
      case kCreditsSection_People:
         return self.peopleItems.count;
      default:
         twlog("what CreditsViewController section is %i?", section);
         return 0;
   }
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath;
{
   (void)tableView;
   
   CGFloat height = 44.; // as standard in xib
   NSDictionary *itemInfo = [self itemInfoAtIndexPath:indexPath];
   NSString *heightString = [itemInfo objectForKey:kCreditCellHeight];
   if (nil != heightString)
      height = [heightString floatValue];
   
   return height;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
   static NSString *CreditsCellIdentifier = @"Credits";
   
   UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CreditsCellIdentifier];
   if (cell == nil)
      cell = [[[UITableViewCell alloc] initWithFrame:CGRectZero reuseIdentifier:CreditsCellIdentifier] autorelease];
	
   cell.selectionStyle = UITableViewCellSelectionStyleNone;
   NSDictionary *itemInfo = [self itemInfoAtIndexPath:indexPath];
   if (nil == itemInfo)
   {
      cell.accessoryType = UITableViewCellAccessoryNone;
      cell.text = @"fix me";
   }
   else 
   {
      cell.text = [itemInfo objectForKey:kCreditCellText];

      if (nil != [itemInfo objectForKey:kCreditCellURL])
      {
         if (kCreditsSection_People == indexPath.section)
            cell.accessoryType = UITableViewCellAccessoryDetailDisclosureButton;
         else
            cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
      }
      else
         cell.accessoryType = UITableViewCellAccessoryNone;
      
      NSString *iconFile = [itemInfo objectForKey:kCreditCellImage];
      if (nil != iconFile)
         cell.image = [UIImage imageNamed:iconFile];
      else if (kCreditsSection_People == indexPath.section)
         cell.image = [self creditsImageFor:cell.text];
      else
         cell.image = nil;
   }
   
	return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
	[self tableView:tableView accessoryButtonTappedForRowWithIndexPath:indexPath];
}

- (void)tableView:(UITableView *)tableView accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)indexPath
{
 	(void)tableView;

   NSDictionary *itemInfo = [self itemInfoAtIndexPath:indexPath];
   NSString *urlString = [itemInfo objectForKey:kCreditCellURL];
   if (urlString)
      [[UIApplication sharedApplication] openURL:[NSURL URLWithString:urlString]];
}

@end
